package com.productMangement.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.productMangement.model.Product;
import com.productMangement.service.ProductService;

@CrossOrigin(origins = "http://localhost:3000") // annotation allows cross-origin requests from the specified origin (http://localhost:3000). It's used to handle requests from a different domain.
@RestController // annotation indicates that this class is a Spring MVC controller, and the return values of the methods will be serialized directly into the HTTP response body.
public class ProductController {
	
	// dependency injection, where the controller relies on the functionality provided by ProductService
	@Autowired
	private ProductService productService;
	
	@PostMapping("/saveProduct")
	public ResponseEntity<?> saveProduct(@RequestBody Product product){
		return new ResponseEntity<>
		(productService.saveProduct(product),HttpStatus.CREATED);
	}
	@GetMapping("/")
	public ResponseEntity<?> getAllProduct(){
		return new ResponseEntity<>(productService.getAllProduct(),HttpStatus.OK);
	}
	@GetMapping("/{id}")
	public ResponseEntity<?> getProductById(@PathVariable Integer id){
		return new ResponseEntity<>(productService.getProductById(id),HttpStatus.OK);
	}
	@DeleteMapping("/deleteProduct/{id}")
	public ResponseEntity<?> deleteProduct(@PathVariable Integer id){
		return new ResponseEntity<>(productService.deleteProduct(id),HttpStatus.OK);
	}
	@PostMapping("/editProduct/{id}")
	public ResponseEntity<?> editProduct(@RequestBody Product product, @PathVariable Integer id){
		return new ResponseEntity<>(productService.editProduct(product, id),HttpStatus.CREATED);
	}
}
